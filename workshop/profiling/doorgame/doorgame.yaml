apiVersion: apps/v1
kind: Deployment
metadata:
  name: doorgame
spec:
  selector:
    matchLabels:
      app: doorgame
  template:
    metadata:
      labels:
        app: doorgame
    spec:
      tolerations:
      nodeSelector:
      terminationGracePeriodSeconds: 5
      # use init containers to first ensure the MySQL database is available, then populate it with
      # data required by the application
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.31
          command: [ 'sh', '-c', 'echo -e "Checking for the availability of the MySQL database"; while ! nc -z mysql 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL database is ready";' ]
        - name: populate-app-data
          image: mysql:8.3.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-user-pass
                  key: MYSQL_ROOT_PASSWORD
          volumeMounts:
            - name: mysql-data
              mountPath: /tmp
          command: [ 'sh', '-c', 'echo -e "Populating the application data"; mysql --host=mysql.default.svc.cluster.local --password=''$(MYSQL_ROOT_PASSWORD)'' --local-infile=1 < /tmp/populate_db.txt' ]
      containers:
        - name: doorgame
          image: docker.io/library/doorgame:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 9090
          env:
            - name: PORT
              value: "9090"
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://$(NODE_IP):4318"
            - name: OTEL_SERVICE_NAME
              value: "doorgame"
            - name: OTEL_PROPAGATORS
              value: "tracecontext,baggage"
            - name: SPLUNK_PROFILER_ENABLED
              value: "false"
            - name: SPLUNK_PROFILER_MEMORY_ENABLED
              value: "false"
            - name: SPLUNK_PROFILER_CALL_STACK_INTERVAL
              value:  "100ms"
            - name: SPLUNK_PROFILER  
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-user-pass
                  key: MYSQL_ROOT_PASSWORD
          resources:
            requests:
              cpu: 150m
              memory: 2048Mi
            limits:
              cpu: 300m
              memory: 4096Mi
      volumes:
        - name: mysql-data
          configMap:
            name: mysql-data
            items:
              - key: users.csv
                path: users.csv
              - key: organizations.csv
                path: organizations.csv
              - key: populate_db.txt
                path: populate_db.txt
---
apiVersion: v1
kind: Service
metadata:
  name: doorgame
  namespace: default
spec:
  selector:
    app: doorgame
  ports:
    - name: http
      port: 9090
      targetPort: 9090
      protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: doorgame-ingress
  namespace: default
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  # If Traefik is the default IngressClass, you can omit ingressClassName.
  ingressClassName: traefik
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: doorgame
                port:
                  number: 9090